'use strict';
import   "73bda68f7d635581c0ab497be226b3bb:../internals/export";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/is-pure";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/global";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/get-built-in";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/native-promise-constructor";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/redefine";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/redefine-all";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/object-set-prototype-of";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/set-to-string-tag";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/set-species";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/is-object";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/a-function";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/an-instance";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/inspect-source";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/iterate";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/check-correctness-of-iteration";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/species-constructor";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/task";
var $73bda68f7d635581c0ab497be226b3bb$require$task = $73bda68f7d635581c0ab497be226b3bb$import$dd7b7067bf215be7$77f8d2fc923b14e3;
import   "73bda68f7d635581c0ab497be226b3bb:../internals/microtask";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/promise-resolve";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/host-report-errors";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/new-promise-capability";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/perform";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/internal-state";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/is-forced";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/well-known-symbol";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/engine-is-browser";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/engine-is-node";
import   "73bda68f7d635581c0ab497be226b3bb:../internals/engine-v8-version";
var $73bda68f7d635581c0ab497be226b3bb$var$SPECIES = $73bda68f7d635581c0ab497be226b3bb$import$88242bc6a9673a44('species');
var $73bda68f7d635581c0ab497be226b3bb$var$PROMISE = 'Promise';
var $73bda68f7d635581c0ab497be226b3bb$var$getInternalState = $73bda68f7d635581c0ab497be226b3bb$import$2c03d954288482bc$7eb84799c931fe91;
var $73bda68f7d635581c0ab497be226b3bb$var$setInternalState = $73bda68f7d635581c0ab497be226b3bb$import$2c03d954288482bc$77f8d2fc923b14e3;
var $73bda68f7d635581c0ab497be226b3bb$var$getInternalPromiseState = $73bda68f7d635581c0ab497be226b3bb$import$2c03d954288482bc$41aa07b58faf19b8($73bda68f7d635581c0ab497be226b3bb$var$PROMISE);
var $73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype = $73bda68f7d635581c0ab497be226b3bb$import$e8e222866d5a7839 && $73bda68f7d635581c0ab497be226b3bb$import$e8e222866d5a7839.prototype;
var $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor = $73bda68f7d635581c0ab497be226b3bb$import$e8e222866d5a7839;
var $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructorPrototype = $73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype;
var $73bda68f7d635581c0ab497be226b3bb$var$TypeError = $73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253.TypeError;
var $73bda68f7d635581c0ab497be226b3bb$var$document = $73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253.document;
var $73bda68f7d635581c0ab497be226b3bb$var$process = $73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253.process;
var $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability = $73bda68f7d635581c0ab497be226b3bb$import$88cdf320d2dc9c28$ffb27d6bd8d1eb33;
var $73bda68f7d635581c0ab497be226b3bb$var$newGenericPromiseCapability = $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability;
var $73bda68f7d635581c0ab497be226b3bb$var$DISPATCH_EVENT = !!($73bda68f7d635581c0ab497be226b3bb$var$document && $73bda68f7d635581c0ab497be226b3bb$var$document.createEvent && $73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253.dispatchEvent);
var $73bda68f7d635581c0ab497be226b3bb$var$NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var $73bda68f7d635581c0ab497be226b3bb$var$UNHANDLED_REJECTION = 'unhandledrejection';
var $73bda68f7d635581c0ab497be226b3bb$var$REJECTION_HANDLED = 'rejectionhandled';
var $73bda68f7d635581c0ab497be226b3bb$var$PENDING = 0;
var $73bda68f7d635581c0ab497be226b3bb$var$FULFILLED = 1;
var $73bda68f7d635581c0ab497be226b3bb$var$REJECTED = 2;
var $73bda68f7d635581c0ab497be226b3bb$var$HANDLED = 1;
var $73bda68f7d635581c0ab497be226b3bb$var$UNHANDLED = 2;
var $73bda68f7d635581c0ab497be226b3bb$var$SUBCLASSING = false;
var $73bda68f7d635581c0ab497be226b3bb$var$Internal, $73bda68f7d635581c0ab497be226b3bb$var$OwnPromiseCapability, $73bda68f7d635581c0ab497be226b3bb$var$PromiseWrapper, $73bda68f7d635581c0ab497be226b3bb$var$nativeThen;
var $73bda68f7d635581c0ab497be226b3bb$var$FORCED = $73bda68f7d635581c0ab497be226b3bb$import$6d4a6b2681f6fa01($73bda68f7d635581c0ab497be226b3bb$var$PROMISE, function() {
    var GLOBAL_CORE_JS_PROMISE = $73bda68f7d635581c0ab497be226b3bb$import$f7efd47fd30433a1($73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor) !== String($73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor);
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (!GLOBAL_CORE_JS_PROMISE && $73bda68f7d635581c0ab497be226b3bb$import$aa08777f3c690dd7 === 66) return true;
    // We need Promise#finally in the pure version for preventing prototype pollution
    if ($73bda68f7d635581c0ab497be226b3bb$import$1bdf0350b9a8d46c && !$73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructorPrototype['finally']) return true;
    // We can't use @@species feature detection in V8 since it causes
    // deoptimization and performance degradation
    // https://github.com/zloirock/core-js/issues/679
    if ($73bda68f7d635581c0ab497be226b3bb$import$aa08777f3c690dd7 >= 51 && /native code/.test($73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor)) return false;
    // Detect correctness of subclassing with @@species support
    var promise = new $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor(function(resolve) {
        resolve(1);
    });
    var FakePromise = function(exec) {
        exec(function() {
        }, function() {
        });
    };
    var constructor = promise.constructor = {
    };
    constructor[$73bda68f7d635581c0ab497be226b3bb$var$SPECIES] = FakePromise;
    $73bda68f7d635581c0ab497be226b3bb$var$SUBCLASSING = promise.then(function() {
    }) instanceof FakePromise;
    if (!$73bda68f7d635581c0ab497be226b3bb$var$SUBCLASSING) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return !GLOBAL_CORE_JS_PROMISE && $73bda68f7d635581c0ab497be226b3bb$import$2058034a4e283d1c && !$73bda68f7d635581c0ab497be226b3bb$var$NATIVE_REJECTION_EVENT;
});
var $73bda68f7d635581c0ab497be226b3bb$var$INCORRECT_ITERATION = $73bda68f7d635581c0ab497be226b3bb$var$FORCED || !$73bda68f7d635581c0ab497be226b3bb$import$1d6ae00f2363e8ff(function(iterable) {
    $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor.all(iterable)['catch'](function() {
    });
});
// helpers
var $73bda68f7d635581c0ab497be226b3bb$var$isThenable = function(it) {
    var then;
    return $73bda68f7d635581c0ab497be226b3bb$import$9294ccec169e68b9(it) && typeof (then = it.then) == 'function' ? then : false;
};
var $73bda68f7d635581c0ab497be226b3bb$var$notify = function(state, isReject) {
    if (state.notified) return;
    state.notified = true;
    var chain = state.reactions;
    $73bda68f7d635581c0ab497be226b3bb$import$c917179506a7c1c9(function() {
        var value = state.value;
        var ok = state.state == $73bda68f7d635581c0ab497be226b3bb$var$FULFILLED;
        var index = 0;
        // variable length - can't use forEach
        while(chain.length > index){
            var reaction = chain[index++];
            var handler = ok ? reaction.ok : reaction.fail;
            var resolve = reaction.resolve;
            var reject = reaction.reject;
            var domain = reaction.domain;
            var result, then, exited;
            try {
                if (handler) {
                    if (!ok) {
                        if (state.rejection === $73bda68f7d635581c0ab497be226b3bb$var$UNHANDLED) $73bda68f7d635581c0ab497be226b3bb$var$onHandleUnhandled(state);
                        state.rejection = $73bda68f7d635581c0ab497be226b3bb$var$HANDLED;
                    }
                    if (handler === true) result = value;
                    else {
                        if (domain) domain.enter();
                        result = handler(value); // can throw
                        if (domain) {
                            domain.exit();
                            exited = true;
                        }
                    }
                    if (result === reaction.promise) reject($73bda68f7d635581c0ab497be226b3bb$var$TypeError('Promise-chain cycle'));
                    else if (then = $73bda68f7d635581c0ab497be226b3bb$var$isThenable(result)) then.call(result, resolve, reject);
                    else resolve(result);
                } else reject(value);
            } catch (error) {
                if (domain && !exited) domain.exit();
                reject(error);
            }
        }
        state.reactions = [];
        state.notified = false;
        if (isReject && !state.rejection) $73bda68f7d635581c0ab497be226b3bb$var$onUnhandled(state);
    });
};
var $73bda68f7d635581c0ab497be226b3bb$var$dispatchEvent = function(name, promise, reason) {
    var event, handler;
    if ($73bda68f7d635581c0ab497be226b3bb$var$DISPATCH_EVENT) {
        event = $73bda68f7d635581c0ab497be226b3bb$var$document.createEvent('Event');
        event.promise = promise;
        event.reason = reason;
        event.initEvent(name, false, true);
        $73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253.dispatchEvent(event);
    } else event = {
        promise: promise,
        reason: reason
    };
    if (!$73bda68f7d635581c0ab497be226b3bb$var$NATIVE_REJECTION_EVENT && (handler = $73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253['on' + name])) handler(event);
    else if (name === $73bda68f7d635581c0ab497be226b3bb$var$UNHANDLED_REJECTION) $73bda68f7d635581c0ab497be226b3bb$import$cd109be7be6bfcc6('Unhandled promise rejection', reason);
};
var $73bda68f7d635581c0ab497be226b3bb$var$onUnhandled = function(state) {
    $73bda68f7d635581c0ab497be226b3bb$require$task.call($73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253, function() {
        var promise = state.facade;
        var value = state.value;
        var IS_UNHANDLED = $73bda68f7d635581c0ab497be226b3bb$var$isUnhandled(state);
        var result;
        if (IS_UNHANDLED) {
            result = $73bda68f7d635581c0ab497be226b3bb$import$e9a6624ae67eae60(function() {
                if ($73bda68f7d635581c0ab497be226b3bb$import$417f1fc70487a5af) $73bda68f7d635581c0ab497be226b3bb$var$process.emit('unhandledRejection', value, promise);
                else $73bda68f7d635581c0ab497be226b3bb$var$dispatchEvent($73bda68f7d635581c0ab497be226b3bb$var$UNHANDLED_REJECTION, promise, value);
            });
            // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
            state.rejection = $73bda68f7d635581c0ab497be226b3bb$import$417f1fc70487a5af || $73bda68f7d635581c0ab497be226b3bb$var$isUnhandled(state) ? $73bda68f7d635581c0ab497be226b3bb$var$UNHANDLED : $73bda68f7d635581c0ab497be226b3bb$var$HANDLED;
            if (result.error) throw result.value;
        }
    });
};
var $73bda68f7d635581c0ab497be226b3bb$var$isUnhandled = function(state) {
    return state.rejection !== $73bda68f7d635581c0ab497be226b3bb$var$HANDLED && !state.parent;
};
var $73bda68f7d635581c0ab497be226b3bb$var$onHandleUnhandled = function(state) {
    $73bda68f7d635581c0ab497be226b3bb$require$task.call($73bda68f7d635581c0ab497be226b3bb$import$da678c04728da253, function() {
        var promise = state.facade;
        if ($73bda68f7d635581c0ab497be226b3bb$import$417f1fc70487a5af) $73bda68f7d635581c0ab497be226b3bb$var$process.emit('rejectionHandled', promise);
        else $73bda68f7d635581c0ab497be226b3bb$var$dispatchEvent($73bda68f7d635581c0ab497be226b3bb$var$REJECTION_HANDLED, promise, state.value);
    });
};
var $73bda68f7d635581c0ab497be226b3bb$var$bind = function(fn, state, unwrap) {
    return function(value) {
        fn(state, value, unwrap);
    };
};
var $73bda68f7d635581c0ab497be226b3bb$var$internalReject = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = $73bda68f7d635581c0ab497be226b3bb$var$REJECTED;
    $73bda68f7d635581c0ab497be226b3bb$var$notify(state, true);
};
var $73bda68f7d635581c0ab497be226b3bb$var$internalResolve = function(state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
        if (state.facade === value) throw $73bda68f7d635581c0ab497be226b3bb$var$TypeError("Promise can't be resolved itself");
        var then = $73bda68f7d635581c0ab497be226b3bb$var$isThenable(value);
        if (then) $73bda68f7d635581c0ab497be226b3bb$import$c917179506a7c1c9(function() {
            var wrapper = {
                done: false
            };
            try {
                then.call(value, $73bda68f7d635581c0ab497be226b3bb$var$bind($73bda68f7d635581c0ab497be226b3bb$var$internalResolve, wrapper, state), $73bda68f7d635581c0ab497be226b3bb$var$bind($73bda68f7d635581c0ab497be226b3bb$var$internalReject, wrapper, state));
            } catch (error) {
                $73bda68f7d635581c0ab497be226b3bb$var$internalReject(wrapper, error, state);
            }
        });
        else {
            state.value = value;
            state.state = $73bda68f7d635581c0ab497be226b3bb$var$FULFILLED;
            $73bda68f7d635581c0ab497be226b3bb$var$notify(state, false);
        }
    } catch (error) {
        $73bda68f7d635581c0ab497be226b3bb$var$internalReject({
            done: false
        }, error, state);
    }
};
// constructor polyfill
if ($73bda68f7d635581c0ab497be226b3bb$var$FORCED) {
    // 25.4.3.1 Promise(executor)
    $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor = function Promise1(executor) {
        $73bda68f7d635581c0ab497be226b3bb$import$65a2120eaf0c2a0a(this, $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor, $73bda68f7d635581c0ab497be226b3bb$var$PROMISE);
        $73bda68f7d635581c0ab497be226b3bb$import$feed022c18f6196b(executor);
        $73bda68f7d635581c0ab497be226b3bb$var$Internal.call(this);
        var state = $73bda68f7d635581c0ab497be226b3bb$var$getInternalState(this);
        try {
            executor($73bda68f7d635581c0ab497be226b3bb$var$bind($73bda68f7d635581c0ab497be226b3bb$var$internalResolve, state), $73bda68f7d635581c0ab497be226b3bb$var$bind($73bda68f7d635581c0ab497be226b3bb$var$internalReject, state));
        } catch (error) {
            $73bda68f7d635581c0ab497be226b3bb$var$internalReject(state, error);
        }
    };
    $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructorPrototype = $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor.prototype;
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    $73bda68f7d635581c0ab497be226b3bb$var$Internal = function Promise2(executor) {
        $73bda68f7d635581c0ab497be226b3bb$var$setInternalState(this, {
            type: $73bda68f7d635581c0ab497be226b3bb$var$PROMISE,
            done: false,
            notified: false,
            parent: false,
            reactions: [],
            rejection: false,
            state: $73bda68f7d635581c0ab497be226b3bb$var$PENDING,
            value: undefined
        });
    };
    $73bda68f7d635581c0ab497be226b3bb$var$Internal.prototype = $73bda68f7d635581c0ab497be226b3bb$import$ce46ad3e687b31c4($73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructorPrototype, {
        // `Promise.prototype.then` method
        // https://tc39.es/ecma262/#sec-promise.prototype.then
        then: function then(onFulfilled, onRejected) {
            var state = $73bda68f7d635581c0ab497be226b3bb$var$getInternalPromiseState(this);
            var reaction = $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability($73bda68f7d635581c0ab497be226b3bb$import$d2cfec5023aa0b95(this, $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor));
            reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
            reaction.fail = typeof onRejected == 'function' && onRejected;
            reaction.domain = $73bda68f7d635581c0ab497be226b3bb$import$417f1fc70487a5af ? $73bda68f7d635581c0ab497be226b3bb$var$process.domain : undefined;
            state.parent = true;
            state.reactions.push(reaction);
            if (state.state != $73bda68f7d635581c0ab497be226b3bb$var$PENDING) $73bda68f7d635581c0ab497be226b3bb$var$notify(state, false);
            return reaction.promise;
        },
        // `Promise.prototype.catch` method
        // https://tc39.es/ecma262/#sec-promise.prototype.catch
        'catch': function(onRejected) {
            return this.then(undefined, onRejected);
        }
    });
    $73bda68f7d635581c0ab497be226b3bb$var$OwnPromiseCapability = function() {
        var promise = new $73bda68f7d635581c0ab497be226b3bb$var$Internal();
        var state = $73bda68f7d635581c0ab497be226b3bb$var$getInternalState(promise);
        this.promise = promise;
        this.resolve = $73bda68f7d635581c0ab497be226b3bb$var$bind($73bda68f7d635581c0ab497be226b3bb$var$internalResolve, state);
        this.reject = $73bda68f7d635581c0ab497be226b3bb$var$bind($73bda68f7d635581c0ab497be226b3bb$var$internalReject, state);
    };
    $73bda68f7d635581c0ab497be226b3bb$import$88cdf320d2dc9c28$ffb27d6bd8d1eb33 = $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability = function(C) {
        return C === $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor || C === $73bda68f7d635581c0ab497be226b3bb$var$PromiseWrapper ? new $73bda68f7d635581c0ab497be226b3bb$var$OwnPromiseCapability(C) : $73bda68f7d635581c0ab497be226b3bb$var$newGenericPromiseCapability(C);
    };
    if (!$73bda68f7d635581c0ab497be226b3bb$import$1bdf0350b9a8d46c && typeof $73bda68f7d635581c0ab497be226b3bb$import$e8e222866d5a7839 == 'function' && $73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype !== Object.prototype) {
        $73bda68f7d635581c0ab497be226b3bb$var$nativeThen = $73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype.then;
        if (!$73bda68f7d635581c0ab497be226b3bb$var$SUBCLASSING) {
            // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
            $73bda68f7d635581c0ab497be226b3bb$import$715a1a2c44d923e3($73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
                var that = this;
                return new $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor(function(resolve, reject) {
                    $73bda68f7d635581c0ab497be226b3bb$var$nativeThen.call(that, resolve, reject);
                }).then(onFulfilled, onRejected);
            // https://github.com/zloirock/core-js/issues/640
            }, {
                unsafe: true
            });
            // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
            $73bda68f7d635581c0ab497be226b3bb$import$715a1a2c44d923e3($73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype, 'catch', $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructorPrototype['catch'], {
                unsafe: true
            });
        }
        // make `.constructor === Promise` work for native promise-based APIs
        try {
            delete $73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype.constructor;
        } catch (error) {
        }
        // make `instanceof Promise` work for native promise-based APIs
        if ($73bda68f7d635581c0ab497be226b3bb$import$74d6517d4e0bb391) $73bda68f7d635581c0ab497be226b3bb$import$74d6517d4e0bb391($73bda68f7d635581c0ab497be226b3bb$var$NativePromisePrototype, $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructorPrototype);
    }
}
$73bda68f7d635581c0ab497be226b3bb$import$1bb3f1a3ac631152({
    global: true,
    wrap: true,
    forced: $73bda68f7d635581c0ab497be226b3bb$var$FORCED
}, {
    Promise: $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor
});
$73bda68f7d635581c0ab497be226b3bb$import$c84072deb0264877($73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor, $73bda68f7d635581c0ab497be226b3bb$var$PROMISE, false, true);
$73bda68f7d635581c0ab497be226b3bb$import$4ab311111214a6d($73bda68f7d635581c0ab497be226b3bb$var$PROMISE);
$73bda68f7d635581c0ab497be226b3bb$var$PromiseWrapper = $73bda68f7d635581c0ab497be226b3bb$import$acc15958b3da080($73bda68f7d635581c0ab497be226b3bb$var$PROMISE);
// statics
$73bda68f7d635581c0ab497be226b3bb$import$1bb3f1a3ac631152({
    target: $73bda68f7d635581c0ab497be226b3bb$var$PROMISE,
    stat: true,
    forced: $73bda68f7d635581c0ab497be226b3bb$var$FORCED
}, {
    // `Promise.reject` method
    // https://tc39.es/ecma262/#sec-promise.reject
    reject: function reject(r) {
        var capability = $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability(this);
        capability.reject.call(undefined, r);
        return capability.promise;
    }
});
$73bda68f7d635581c0ab497be226b3bb$import$1bb3f1a3ac631152({
    target: $73bda68f7d635581c0ab497be226b3bb$var$PROMISE,
    stat: true,
    forced: $73bda68f7d635581c0ab497be226b3bb$import$1bdf0350b9a8d46c || $73bda68f7d635581c0ab497be226b3bb$var$FORCED
}, {
    // `Promise.resolve` method
    // https://tc39.es/ecma262/#sec-promise.resolve
    resolve: function resolve(x) {
        return $73bda68f7d635581c0ab497be226b3bb$import$95a2c248f38ad163($73bda68f7d635581c0ab497be226b3bb$import$1bdf0350b9a8d46c && this === $73bda68f7d635581c0ab497be226b3bb$var$PromiseWrapper ? $73bda68f7d635581c0ab497be226b3bb$var$PromiseConstructor : this, x);
    }
});
$73bda68f7d635581c0ab497be226b3bb$import$1bb3f1a3ac631152({
    target: $73bda68f7d635581c0ab497be226b3bb$var$PROMISE,
    stat: true,
    forced: $73bda68f7d635581c0ab497be226b3bb$var$INCORRECT_ITERATION
}, {
    // `Promise.all` method
    // https://tc39.es/ecma262/#sec-promise.all
    all: function all(iterable) {
        var C = this;
        var capability = $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability(C);
        var resolve = capability.resolve;
        var reject = capability.reject;
        var result = $73bda68f7d635581c0ab497be226b3bb$import$e9a6624ae67eae60(function() {
            var $promiseResolve = $73bda68f7d635581c0ab497be226b3bb$import$feed022c18f6196b(C.resolve);
            var values = [];
            var counter = 0;
            var remaining = 1;
            $73bda68f7d635581c0ab497be226b3bb$import$1f57ebca7b213dbf(iterable, function(promise) {
                var index = counter++;
                var alreadyCalled = false;
                values.push(undefined);
                remaining++;
                $promiseResolve.call(C, promise).then(function(value) {
                    if (alreadyCalled) return;
                    alreadyCalled = true;
                    values[index] = value;
                    (--remaining) || resolve(values);
                }, reject);
            });
            (--remaining) || resolve(values);
        });
        if (result.error) reject(result.value);
        return capability.promise;
    },
    // `Promise.race` method
    // https://tc39.es/ecma262/#sec-promise.race
    race: function race(iterable) {
        var C = this;
        var capability = $73bda68f7d635581c0ab497be226b3bb$var$newPromiseCapability(C);
        var reject = capability.reject;
        var result = $73bda68f7d635581c0ab497be226b3bb$import$e9a6624ae67eae60(function() {
            var $promiseResolve = $73bda68f7d635581c0ab497be226b3bb$import$feed022c18f6196b(C.resolve);
            $73bda68f7d635581c0ab497be226b3bb$import$1f57ebca7b213dbf(iterable, function(promise) {
                $promiseResolve.call(C, promise).then(capability.resolve, reject);
            });
        });
        if (result.error) reject(result.value);
        return capability.promise;
    }
});
