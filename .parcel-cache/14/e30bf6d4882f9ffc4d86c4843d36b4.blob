'use strict';
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/export";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/is-object";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/is-array";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/to-absolute-index";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/to-length";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/to-indexed-object";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/create-property";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/well-known-symbol";
import   "b1bcb262dc84460ad0f34705ffcb17c8:../internals/array-method-has-species-support";
var $b1bcb262dc84460ad0f34705ffcb17c8$var$HAS_SPECIES_SUPPORT = $b1bcb262dc84460ad0f34705ffcb17c8$import$d71858cb7e8d3414('slice');
var $b1bcb262dc84460ad0f34705ffcb17c8$var$SPECIES = $b1bcb262dc84460ad0f34705ffcb17c8$import$88242bc6a9673a44('species');
var $b1bcb262dc84460ad0f34705ffcb17c8$var$nativeSlice = [].slice;
var $b1bcb262dc84460ad0f34705ffcb17c8$var$max = Math.max;
// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$b1bcb262dc84460ad0f34705ffcb17c8$import$1bb3f1a3ac631152({
    target: 'Array',
    proto: true,
    forced: !$b1bcb262dc84460ad0f34705ffcb17c8$var$HAS_SPECIES_SUPPORT
}, {
    slice: function slice(start, end) {
        var O = $b1bcb262dc84460ad0f34705ffcb17c8$import$73e80bdb170d55b7(this);
        var length = $b1bcb262dc84460ad0f34705ffcb17c8$import$4102f61a7d1ec5ae(O.length);
        var k = $b1bcb262dc84460ad0f34705ffcb17c8$import$bcb4abe55a109f79(start, length);
        var fin = $b1bcb262dc84460ad0f34705ffcb17c8$import$bcb4abe55a109f79(end === undefined ? length : end, length);
        // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
        var Constructor, result, n;
        if ($b1bcb262dc84460ad0f34705ffcb17c8$import$a3ab90aad49ab6f8(O)) {
            Constructor = O.constructor;
            // cross-realm fallback
            if (typeof Constructor == 'function' && (Constructor === Array || $b1bcb262dc84460ad0f34705ffcb17c8$import$a3ab90aad49ab6f8(Constructor.prototype))) Constructor = undefined;
            else if ($b1bcb262dc84460ad0f34705ffcb17c8$import$9294ccec169e68b9(Constructor)) {
                Constructor = Constructor[$b1bcb262dc84460ad0f34705ffcb17c8$var$SPECIES];
                if (Constructor === null) Constructor = undefined;
            }
            if (Constructor === Array || Constructor === undefined) return $b1bcb262dc84460ad0f34705ffcb17c8$var$nativeSlice.call(O, k, fin);
        }
        result = new (Constructor === undefined ? Array : Constructor)($b1bcb262dc84460ad0f34705ffcb17c8$var$max(fin - k, 0));
        for(n = 0; k < fin; k++, n++)if (k in O) $b1bcb262dc84460ad0f34705ffcb17c8$import$22a67bab19fa66bf(result, n, O[k]);
        result.length = n;
        return result;
    }
});
