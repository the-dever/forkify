import   "4c0b08b25622c12f5b906f06fe9c6270:../internals/function-bind-context";
import   "4c0b08b25622c12f5b906f06fe9c6270:../internals/indexed-object";
import   "4c0b08b25622c12f5b906f06fe9c6270:../internals/to-object";
import   "4c0b08b25622c12f5b906f06fe9c6270:../internals/to-length";
import   "4c0b08b25622c12f5b906f06fe9c6270:../internals/array-species-create";
var $4c0b08b25622c12f5b906f06fe9c6270$var$push = [].push;
// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod = function(TYPE) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var IS_FILTER_OUT = TYPE == 7;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    return function($this, callbackfn, that, specificCreate) {
        var O = $4c0b08b25622c12f5b906f06fe9c6270$import$565dce0892f29b05($this);
        var self = $4c0b08b25622c12f5b906f06fe9c6270$import$b563c836d980da8e(O);
        var boundFunction = $4c0b08b25622c12f5b906f06fe9c6270$import$66177e0ceb63850c(callbackfn, that, 3);
        var length = $4c0b08b25622c12f5b906f06fe9c6270$import$4102f61a7d1ec5ae(self.length);
        var index = 0;
        var create = specificCreate || $4c0b08b25622c12f5b906f06fe9c6270$import$270ce3808f347882;
        var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
        var value, result;
        for(; length > index; index++)if (NO_HOLES || index in self) {
            value = self[index];
            result = boundFunction(value, index, O);
            if (TYPE) {
                if (IS_MAP) target[index] = result; // map
                else if (result) switch(TYPE){
                    case 3:
                        return true; // some
                    case 5:
                        return value; // find
                    case 6:
                        return index; // findIndex
                    case 2:
                        $4c0b08b25622c12f5b906f06fe9c6270$var$push.call(target, value); // filter
                }
                else switch(TYPE){
                    case 4:
                        return false; // every
                    case 7:
                        $4c0b08b25622c12f5b906f06fe9c6270$var$push.call(target, value); // filterOut
                }
            }
        }
        return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
};
$4c0b08b25622c12f5b906f06fe9c6270$exports = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(6),
    // `Array.prototype.filterOut` method
    // https://github.com/tc39/proposal-array-filtering
    filterOut: $4c0b08b25622c12f5b906f06fe9c6270$var$createMethod(7)
};
