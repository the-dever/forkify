import   "ff81708e4e130a09a41cb0d3f8bf9a1e:process";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/ var $ff81708e4e130a09a41cb0d3f8bf9a1e$var$objectKeys = Object.keys || function(obj) {
    var keys = [];
    for(var key in obj)keys.push(key);
    return keys;
};
/*</replacement>*/ $ff81708e4e130a09a41cb0d3f8bf9a1e$exports = $ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex;
import   "ff81708e4e130a09a41cb0d3f8bf9a1e:./_stream_readable";
import   "ff81708e4e130a09a41cb0d3f8bf9a1e:./_stream_writable";
import   "ff81708e4e130a09a41cb0d3f8bf9a1e:inherits";
$ff81708e4e130a09a41cb0d3f8bf9a1e$import$70b005d566dd942e($ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex, $ff81708e4e130a09a41cb0d3f8bf9a1e$import$c5bc407bec2bafa8);
// Allow the keys array to be GC'ed.
var $ff81708e4e130a09a41cb0d3f8bf9a1e$var$keys = $ff81708e4e130a09a41cb0d3f8bf9a1e$var$objectKeys($ff81708e4e130a09a41cb0d3f8bf9a1e$import$ce9350076e9d9b95$17e2506abf8d3a49);
for(var $ff81708e4e130a09a41cb0d3f8bf9a1e$var$v = 0; $ff81708e4e130a09a41cb0d3f8bf9a1e$var$v < $ff81708e4e130a09a41cb0d3f8bf9a1e$var$keys.length; $ff81708e4e130a09a41cb0d3f8bf9a1e$var$v++){
    var $ff81708e4e130a09a41cb0d3f8bf9a1e$var$method = $ff81708e4e130a09a41cb0d3f8bf9a1e$var$keys[$ff81708e4e130a09a41cb0d3f8bf9a1e$var$v];
    if (!$ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex.prototype[$ff81708e4e130a09a41cb0d3f8bf9a1e$var$method]) $ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex.prototype[$ff81708e4e130a09a41cb0d3f8bf9a1e$var$method] = $ff81708e4e130a09a41cb0d3f8bf9a1e$import$ce9350076e9d9b95$17e2506abf8d3a49[$ff81708e4e130a09a41cb0d3f8bf9a1e$var$method];
}
function $ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex(options) {
    if (!(this instanceof $ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex)) return new $ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex(options);
    $ff81708e4e130a09a41cb0d3f8bf9a1e$import$c5bc407bec2bafa8.call(this, options);
    $ff81708e4e130a09a41cb0d3f8bf9a1e$import$ce9350076e9d9b95$a4b4c796a132eb0a(this, options);
    this.allowHalfOpen = true;
    if (options) {
        if (options.readable === false) this.readable = false;
        if (options.writable === false) this.writable = false;
        if (options.allowHalfOpen === false) {
            this.allowHalfOpen = false;
            this.once('end', $ff81708e4e130a09a41cb0d3f8bf9a1e$var$onend);
        }
    }
}
Object.defineProperty($ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.highWaterMark;
    }
});
Object.defineProperty($ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex.prototype, 'writableBuffer', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState && this._writableState.getBuffer();
    }
});
Object.defineProperty($ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex.prototype, 'writableLength', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        return this._writableState.length;
    }
}); // the no-half-open enforcer
function $ff81708e4e130a09a41cb0d3f8bf9a1e$var$onend() {
    // If the writable side ended, then we're ok.
    if (this._writableState.ended) return; // no more data can be written.
    // But allow more writes to happen in this tick.
    $ff81708e4e130a09a41cb0d3f8bf9a1e$import$9242cb9e284019eb$8a6081d09de61a29($ff81708e4e130a09a41cb0d3f8bf9a1e$var$onEndNT, this);
}
function $ff81708e4e130a09a41cb0d3f8bf9a1e$var$onEndNT(self) {
    self.end();
}
Object.defineProperty($ff81708e4e130a09a41cb0d3f8bf9a1e$var$Duplex.prototype, 'destroyed', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function get() {
        if (this._readableState === undefined || this._writableState === undefined) return false;
        return this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function set(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (this._readableState === undefined || this._writableState === undefined) return;
         // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
    }
});
