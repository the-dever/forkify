import   "9745c06016c4d4ef7dc018959d9c1548:../internals/export";
// eslint-disable-next-line es/no-math-hypot -- required for testing
var $9745c06016c4d4ef7dc018959d9c1548$var$$hypot = Math.hypot;
var $9745c06016c4d4ef7dc018959d9c1548$var$abs = Math.abs;
var $9745c06016c4d4ef7dc018959d9c1548$var$sqrt = Math.sqrt;
// Chrome 77 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=9546
var $9745c06016c4d4ef7dc018959d9c1548$var$BUGGY = !!$9745c06016c4d4ef7dc018959d9c1548$var$$hypot && $9745c06016c4d4ef7dc018959d9c1548$var$$hypot(Infinity, NaN) !== Infinity;
// `Math.hypot` method
// https://tc39.es/ecma262/#sec-math.hypot
$9745c06016c4d4ef7dc018959d9c1548$import$1bb3f1a3ac631152({
    target: 'Math',
    stat: true,
    forced: $9745c06016c4d4ef7dc018959d9c1548$var$BUGGY
}, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    hypot: function hypot(value1, value2) {
        var sum = 0;
        var i = 0;
        var aLen = arguments.length;
        var larg = 0;
        var arg, div;
        while(i < aLen){
            arg = $9745c06016c4d4ef7dc018959d9c1548$var$abs(arguments[i++]);
            if (larg < arg) {
                div = larg / arg;
                sum = sum * div * div + 1;
                larg = arg;
            } else if (arg > 0) {
                div = arg / larg;
                sum += div * div;
            } else sum += arg;
        }
        return larg === Infinity ? Infinity : larg * $9745c06016c4d4ef7dc018959d9c1548$var$sqrt(sum);
    }
});
