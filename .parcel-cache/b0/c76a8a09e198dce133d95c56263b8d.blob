import   "caebe95f6de82ccac2f0c81a94ea8113:buffer";
var $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer = $caebe95f6de82ccac2f0c81a94ea8113$import$14e1765886db335a.Buffer;
// alternative to using Object.keys for old browsers
function $caebe95f6de82ccac2f0c81a94ea8113$var$copyProps(src, dst) {
    for(var key in src)dst[key] = src[key];
}
if ($caebe95f6de82ccac2f0c81a94ea8113$var$Buffer.from && $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer.alloc && $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer.allocUnsafe && $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer.allocUnsafeSlow) $caebe95f6de82ccac2f0c81a94ea8113$exports = $caebe95f6de82ccac2f0c81a94ea8113$import$14e1765886db335a;
else {
    // Copy properties from require('buffer')
    $caebe95f6de82ccac2f0c81a94ea8113$var$copyProps($caebe95f6de82ccac2f0c81a94ea8113$import$14e1765886db335a, $caebe95f6de82ccac2f0c81a94ea8113$exports);
    $caebe95f6de82ccac2f0c81a94ea8113$exports.Buffer = $caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer;
}
function $caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer(arg, encodingOrOffset, length) {
    return $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer(arg, encodingOrOffset, length);
}
$caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer.prototype = Object.create($caebe95f6de82ccac2f0c81a94ea8113$var$Buffer.prototype);
// Copy static methods from Buffer
$caebe95f6de82ccac2f0c81a94ea8113$var$copyProps($caebe95f6de82ccac2f0c81a94ea8113$var$Buffer, $caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer);
$caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') throw new TypeError('Argument must not be a number');
    return $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer(arg, encodingOrOffset, length);
};
$caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    var buf = $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') buf.fill(fill, encoding);
        else buf.fill(fill);
    } else buf.fill(0);
    return buf;
};
$caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return $caebe95f6de82ccac2f0c81a94ea8113$var$Buffer(size);
};
$caebe95f6de82ccac2f0c81a94ea8113$var$SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return $caebe95f6de82ccac2f0c81a94ea8113$import$14e1765886db335a.SlowBuffer(size);
};
