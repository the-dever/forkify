import   "4877b11fc05196ccee8e726f079fcd40:process";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var $4877b11fc05196ccee8e726f079fcd40$var$getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {
    };
    for(var i = 0; i < keys.length; i++)descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    return descriptors;
};
var $4877b11fc05196ccee8e726f079fcd40$var$formatRegExp = /%[sdj%]/g;
$4877b11fc05196ccee8e726f079fcd40$exports.format = function(f) {
    if (!$4877b11fc05196ccee8e726f079fcd40$var$isString(f)) {
        var objects = [];
        for(var i = 0; i < arguments.length; i++)objects.push($4877b11fc05196ccee8e726f079fcd40$var$inspect(arguments[i]));
        return objects.join(' ');
    }
    var i = 1;
    var args = arguments;
    var len = args.length;
    var str = String(f).replace($4877b11fc05196ccee8e726f079fcd40$var$formatRegExp, function(x) {
        if (x === '%%') return '%';
        if (i >= len) return x;
        switch(x){
            case '%s':
                return String(args[i++]);
            case '%d':
                return Number(args[i++]);
            case '%j':
                try {
                    return JSON.stringify(args[i++]);
                } catch (_) {
                    return '[Circular]';
                }
            default:
                return x;
        }
    });
    for(var x = args[i]; i < len; x = args[++i])if ($4877b11fc05196ccee8e726f079fcd40$var$isNull(x) || !$4877b11fc05196ccee8e726f079fcd40$var$isObject(x)) str += ' ' + x;
    else str += ' ' + $4877b11fc05196ccee8e726f079fcd40$var$inspect(x);
    return str;
};
// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
$4877b11fc05196ccee8e726f079fcd40$exports.deprecate = function(fn, msg) {
    if (typeof $4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb !== 'undefined' && $4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb.noDeprecation === true) return fn;
    // Allow for deprecating things in the process of starting up.
    if (typeof $4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb === 'undefined') return function() {
        return $4877b11fc05196ccee8e726f079fcd40$exports.deprecate(fn, msg).apply(this, arguments);
    };
    var warned = false;
    function deprecated() {
        if (!warned) {
            if ($4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb.throwDeprecation) throw new Error(msg);
            else if ($4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb.traceDeprecation) console.trace(msg);
            else console.error(msg);
            warned = true;
        }
        return fn.apply(this, arguments);
    }
    return deprecated;
};
var $4877b11fc05196ccee8e726f079fcd40$var$debugs = {
};
var $4877b11fc05196ccee8e726f079fcd40$var$debugEnvRegex = /^$/;
var $4877b11fc05196ccee8e726f079fcd40$var$debugEnv;
$4877b11fc05196ccee8e726f079fcd40$exports.debuglog = function(set) {
    set = set.toUpperCase();
    if (!$4877b11fc05196ccee8e726f079fcd40$var$debugs[set]) {
        if ($4877b11fc05196ccee8e726f079fcd40$var$debugEnvRegex.test(set)) {
            var pid = $4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb.pid;
            $4877b11fc05196ccee8e726f079fcd40$var$debugs[set] = function() {
                var msg = $4877b11fc05196ccee8e726f079fcd40$exports.format.apply($4877b11fc05196ccee8e726f079fcd40$exports, arguments);
                console.error('%s %d: %s', set, pid, msg);
            };
        } else $4877b11fc05196ccee8e726f079fcd40$var$debugs[set] = function() {
        };
    }
    return $4877b11fc05196ccee8e726f079fcd40$var$debugs[set];
};
/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */ /* legacy: obj, showHidden, depth, colors*/ function $4877b11fc05196ccee8e726f079fcd40$var$inspect(obj, opts) {
    // default options
    var ctx = {
        seen: [],
        stylize: $4877b11fc05196ccee8e726f079fcd40$var$stylizeNoColor
    };
    // legacy...
    if (arguments.length >= 3) ctx.depth = arguments[2];
    if (arguments.length >= 4) ctx.colors = arguments[3];
    if ($4877b11fc05196ccee8e726f079fcd40$var$isBoolean(opts)) // legacy...
    ctx.showHidden = opts;
    else if (opts) // got an "options" object
    $4877b11fc05196ccee8e726f079fcd40$exports._extend(ctx, opts);
    // set default options
    if ($4877b11fc05196ccee8e726f079fcd40$var$isUndefined(ctx.showHidden)) ctx.showHidden = false;
    if ($4877b11fc05196ccee8e726f079fcd40$var$isUndefined(ctx.depth)) ctx.depth = 2;
    if ($4877b11fc05196ccee8e726f079fcd40$var$isUndefined(ctx.colors)) ctx.colors = false;
    if ($4877b11fc05196ccee8e726f079fcd40$var$isUndefined(ctx.customInspect)) ctx.customInspect = true;
    if (ctx.colors) ctx.stylize = $4877b11fc05196ccee8e726f079fcd40$var$stylizeWithColor;
    return $4877b11fc05196ccee8e726f079fcd40$var$formatValue(ctx, obj, ctx.depth);
}
$4877b11fc05196ccee8e726f079fcd40$exports.inspect = $4877b11fc05196ccee8e726f079fcd40$var$inspect;
// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
$4877b11fc05196ccee8e726f079fcd40$var$inspect.colors = {
    'bold': [
        1,
        22
    ],
    'italic': [
        3,
        23
    ],
    'underline': [
        4,
        24
    ],
    'inverse': [
        7,
        27
    ],
    'white': [
        37,
        39
    ],
    'grey': [
        90,
        39
    ],
    'black': [
        30,
        39
    ],
    'blue': [
        34,
        39
    ],
    'cyan': [
        36,
        39
    ],
    'green': [
        32,
        39
    ],
    'magenta': [
        35,
        39
    ],
    'red': [
        31,
        39
    ],
    'yellow': [
        33,
        39
    ]
};
// Don't use 'blue' not visible on cmd.exe
$4877b11fc05196ccee8e726f079fcd40$var$inspect.styles = {
    'special': 'cyan',
    'number': 'yellow',
    'boolean': 'yellow',
    'undefined': 'grey',
    'null': 'bold',
    'string': 'green',
    'date': 'magenta',
    // "name": intentionally not styling
    'regexp': 'red'
};
function $4877b11fc05196ccee8e726f079fcd40$var$stylizeWithColor(str, styleType) {
    var style = $4877b11fc05196ccee8e726f079fcd40$var$inspect.styles[styleType];
    if (style) return '\u001b[' + $4877b11fc05196ccee8e726f079fcd40$var$inspect.colors[style][0] + 'm' + str + '\u001b[' + $4877b11fc05196ccee8e726f079fcd40$var$inspect.colors[style][1] + 'm';
    else return str;
}
function $4877b11fc05196ccee8e726f079fcd40$var$stylizeNoColor(str, styleType) {
    return str;
}
function $4877b11fc05196ccee8e726f079fcd40$var$arrayToHash(array) {
    var hash = {
    };
    array.forEach(function(val, idx) {
        hash[val] = true;
    });
    return hash;
}
function $4877b11fc05196ccee8e726f079fcd40$var$formatValue(ctx, value, recurseTimes) {
    // Provide a hook for user-specified inspect functions.
    // Check that value is an object with an inspect function on it
    if (ctx.customInspect && value && $4877b11fc05196ccee8e726f079fcd40$var$isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
    value.inspect !== $4877b11fc05196ccee8e726f079fcd40$exports.inspect && // Also filter out any prototype objects using the circular check.
    !(value.constructor && value.constructor.prototype === value)) {
        var ret = value.inspect(recurseTimes, ctx);
        if (!$4877b11fc05196ccee8e726f079fcd40$var$isString(ret)) ret = $4877b11fc05196ccee8e726f079fcd40$var$formatValue(ctx, ret, recurseTimes);
        return ret;
    }
    // Primitive types cannot have properties
    var primitive = $4877b11fc05196ccee8e726f079fcd40$var$formatPrimitive(ctx, value);
    if (primitive) return primitive;
    // Look up the keys of the object.
    var keys = Object.keys(value);
    var visibleKeys = $4877b11fc05196ccee8e726f079fcd40$var$arrayToHash(keys);
    if (ctx.showHidden) keys = Object.getOwnPropertyNames(value);
    // IE doesn't make error fields non-enumerable
    // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
    if ($4877b11fc05196ccee8e726f079fcd40$var$isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) return $4877b11fc05196ccee8e726f079fcd40$var$formatError(value);
    // Some type of object without properties can be shortcutted.
    if (keys.length === 0) {
        if ($4877b11fc05196ccee8e726f079fcd40$var$isFunction(value)) {
            var name = value.name ? ': ' + value.name : '';
            return ctx.stylize('[Function' + name + ']', 'special');
        }
        if ($4877b11fc05196ccee8e726f079fcd40$var$isRegExp(value)) return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        if ($4877b11fc05196ccee8e726f079fcd40$var$isDate(value)) return ctx.stylize(Date.prototype.toString.call(value), 'date');
        if ($4877b11fc05196ccee8e726f079fcd40$var$isError(value)) return $4877b11fc05196ccee8e726f079fcd40$var$formatError(value);
    }
    var base = '', array = false, braces = [
        '{',
        '}'
    ];
    // Make Array say that they are Array
    if ($4877b11fc05196ccee8e726f079fcd40$var$isArray(value)) {
        array = true;
        braces = [
            '[',
            ']'
        ];
    }
    // Make functions say that they are functions
    if ($4877b11fc05196ccee8e726f079fcd40$var$isFunction(value)) {
        var n = value.name ? ': ' + value.name : '';
        base = ' [Function' + n + ']';
    }
    // Make RegExps say that they are RegExps
    if ($4877b11fc05196ccee8e726f079fcd40$var$isRegExp(value)) base = ' ' + RegExp.prototype.toString.call(value);
    // Make dates with properties first say the date
    if ($4877b11fc05196ccee8e726f079fcd40$var$isDate(value)) base = ' ' + Date.prototype.toUTCString.call(value);
    // Make error with message first say the error
    if ($4877b11fc05196ccee8e726f079fcd40$var$isError(value)) base = ' ' + $4877b11fc05196ccee8e726f079fcd40$var$formatError(value);
    if (keys.length === 0 && (!array || value.length == 0)) return braces[0] + base + braces[1];
    if (recurseTimes < 0) {
        if ($4877b11fc05196ccee8e726f079fcd40$var$isRegExp(value)) return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        else return ctx.stylize('[Object]', 'special');
    }
    ctx.seen.push(value);
    var output;
    if (array) output = $4877b11fc05196ccee8e726f079fcd40$var$formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    else output = keys.map(function(key) {
        return $4877b11fc05196ccee8e726f079fcd40$var$formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
    ctx.seen.pop();
    return $4877b11fc05196ccee8e726f079fcd40$var$reduceToSingleString(output, base, braces);
}
function $4877b11fc05196ccee8e726f079fcd40$var$formatPrimitive(ctx, value) {
    if ($4877b11fc05196ccee8e726f079fcd40$var$isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if ($4877b11fc05196ccee8e726f079fcd40$var$isString(value)) {
        var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
        return ctx.stylize(simple, 'string');
    }
    if ($4877b11fc05196ccee8e726f079fcd40$var$isNumber(value)) return ctx.stylize('' + value, 'number');
    if ($4877b11fc05196ccee8e726f079fcd40$var$isBoolean(value)) return ctx.stylize('' + value, 'boolean');
    // For some reason typeof null is "object", so special case here.
    if ($4877b11fc05196ccee8e726f079fcd40$var$isNull(value)) return ctx.stylize('null', 'null');
}
function $4877b11fc05196ccee8e726f079fcd40$var$formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
}
function $4877b11fc05196ccee8e726f079fcd40$var$formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for(var i = 0, l = value.length; i < l; ++i)if ($4877b11fc05196ccee8e726f079fcd40$var$hasOwnProperty(value, String(i))) output.push($4877b11fc05196ccee8e726f079fcd40$var$formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
    else output.push('');
    keys.forEach(function(key) {
        if (!key.match(/^\d+$/)) output.push($4877b11fc05196ccee8e726f079fcd40$var$formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
    });
    return output;
}
function $4877b11fc05196ccee8e726f079fcd40$var$formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || {
        value: value[key]
    };
    if (desc.get) {
        if (desc.set) str = ctx.stylize('[Getter/Setter]', 'special');
        else str = ctx.stylize('[Getter]', 'special');
    } else if (desc.set) str = ctx.stylize('[Setter]', 'special');
    if (!$4877b11fc05196ccee8e726f079fcd40$var$hasOwnProperty(visibleKeys, key)) name = '[' + key + ']';
    if (!str) {
        if (ctx.seen.indexOf(desc.value) < 0) {
            if ($4877b11fc05196ccee8e726f079fcd40$var$isNull(recurseTimes)) str = $4877b11fc05196ccee8e726f079fcd40$var$formatValue(ctx, desc.value, null);
            else str = $4877b11fc05196ccee8e726f079fcd40$var$formatValue(ctx, desc.value, recurseTimes - 1);
            if (str.indexOf('\n') > -1) {
                if (array) str = str.split('\n').map(function(line) {
                    return '  ' + line;
                }).join('\n').substr(2);
                else str = '\n' + str.split('\n').map(function(line) {
                    return '   ' + line;
                }).join('\n');
            }
        } else str = ctx.stylize('[Circular]', 'special');
    }
    if ($4877b11fc05196ccee8e726f079fcd40$var$isUndefined(name)) {
        if (array && key.match(/^\d+$/)) return str;
        name = JSON.stringify('' + key);
        if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
            name = name.substr(1, name.length - 2);
            name = ctx.stylize(name, 'name');
        } else {
            name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
            name = ctx.stylize(name, 'string');
        }
    }
    return name + ': ' + str;
}
function $4877b11fc05196ccee8e726f079fcd40$var$reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function(prev, cur) {
        numLinesEst++;
        if (cur.indexOf('\n') >= 0) numLinesEst++;
        return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);
    if (length > 60) return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}
import   "4877b11fc05196ccee8e726f079fcd40:./support/types";
// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
$4877b11fc05196ccee8e726f079fcd40$exports.types = $4877b11fc05196ccee8e726f079fcd40$import$9e365259a7e183a9;
function $4877b11fc05196ccee8e726f079fcd40$var$isArray(ar) {
    return Array.isArray(ar);
}
$4877b11fc05196ccee8e726f079fcd40$exports.isArray = $4877b11fc05196ccee8e726f079fcd40$var$isArray;
function $4877b11fc05196ccee8e726f079fcd40$var$isBoolean(arg) {
    return typeof arg === 'boolean';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isBoolean = $4877b11fc05196ccee8e726f079fcd40$var$isBoolean;
function $4877b11fc05196ccee8e726f079fcd40$var$isNull(arg) {
    return arg === null;
}
$4877b11fc05196ccee8e726f079fcd40$exports.isNull = $4877b11fc05196ccee8e726f079fcd40$var$isNull;
function $4877b11fc05196ccee8e726f079fcd40$var$isNullOrUndefined(arg) {
    return arg == null;
}
$4877b11fc05196ccee8e726f079fcd40$exports.isNullOrUndefined = $4877b11fc05196ccee8e726f079fcd40$var$isNullOrUndefined;
function $4877b11fc05196ccee8e726f079fcd40$var$isNumber(arg) {
    return typeof arg === 'number';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isNumber = $4877b11fc05196ccee8e726f079fcd40$var$isNumber;
function $4877b11fc05196ccee8e726f079fcd40$var$isString(arg) {
    return typeof arg === 'string';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isString = $4877b11fc05196ccee8e726f079fcd40$var$isString;
function $4877b11fc05196ccee8e726f079fcd40$var$isSymbol(arg) {
    return typeof arg === 'symbol';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isSymbol = $4877b11fc05196ccee8e726f079fcd40$var$isSymbol;
function $4877b11fc05196ccee8e726f079fcd40$var$isUndefined(arg) {
    return arg === void 0;
}
$4877b11fc05196ccee8e726f079fcd40$exports.isUndefined = $4877b11fc05196ccee8e726f079fcd40$var$isUndefined;
function $4877b11fc05196ccee8e726f079fcd40$var$isRegExp(re) {
    return $4877b11fc05196ccee8e726f079fcd40$var$isObject(re) && $4877b11fc05196ccee8e726f079fcd40$var$objectToString(re) === '[object RegExp]';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isRegExp = $4877b11fc05196ccee8e726f079fcd40$var$isRegExp;
$4877b11fc05196ccee8e726f079fcd40$exports.types.isRegExp = $4877b11fc05196ccee8e726f079fcd40$var$isRegExp;
function $4877b11fc05196ccee8e726f079fcd40$var$isObject(arg) {
    return typeof arg === 'object' && arg !== null;
}
$4877b11fc05196ccee8e726f079fcd40$exports.isObject = $4877b11fc05196ccee8e726f079fcd40$var$isObject;
function $4877b11fc05196ccee8e726f079fcd40$var$isDate(d) {
    return $4877b11fc05196ccee8e726f079fcd40$var$isObject(d) && $4877b11fc05196ccee8e726f079fcd40$var$objectToString(d) === '[object Date]';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isDate = $4877b11fc05196ccee8e726f079fcd40$var$isDate;
$4877b11fc05196ccee8e726f079fcd40$exports.types.isDate = $4877b11fc05196ccee8e726f079fcd40$var$isDate;
function $4877b11fc05196ccee8e726f079fcd40$var$isError(e) {
    return $4877b11fc05196ccee8e726f079fcd40$var$isObject(e) && ($4877b11fc05196ccee8e726f079fcd40$var$objectToString(e) === '[object Error]' || e instanceof Error);
}
$4877b11fc05196ccee8e726f079fcd40$exports.isError = $4877b11fc05196ccee8e726f079fcd40$var$isError;
$4877b11fc05196ccee8e726f079fcd40$exports.types.isNativeError = $4877b11fc05196ccee8e726f079fcd40$var$isError;
function $4877b11fc05196ccee8e726f079fcd40$var$isFunction(arg) {
    return typeof arg === 'function';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isFunction = $4877b11fc05196ccee8e726f079fcd40$var$isFunction;
function $4877b11fc05196ccee8e726f079fcd40$var$isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
}
$4877b11fc05196ccee8e726f079fcd40$exports.isPrimitive = $4877b11fc05196ccee8e726f079fcd40$var$isPrimitive;
import   "4877b11fc05196ccee8e726f079fcd40:./support/isBuffer";
$4877b11fc05196ccee8e726f079fcd40$exports.isBuffer = $4877b11fc05196ccee8e726f079fcd40$import$39abe4b522cad2b5;
function $4877b11fc05196ccee8e726f079fcd40$var$objectToString(o) {
    return Object.prototype.toString.call(o);
}
function $4877b11fc05196ccee8e726f079fcd40$var$pad(n) {
    return n < 10 ? '0' + n.toString(10) : n.toString(10);
}
var $4877b11fc05196ccee8e726f079fcd40$var$months = [
    'Jan',
    'Feb',
    'Mar',
    'Apr',
    'May',
    'Jun',
    'Jul',
    'Aug',
    'Sep',
    'Oct',
    'Nov',
    'Dec'
];
// 26 Feb 16:19:34
function $4877b11fc05196ccee8e726f079fcd40$var$timestamp() {
    var d = new Date();
    var time = [
        $4877b11fc05196ccee8e726f079fcd40$var$pad(d.getHours()),
        $4877b11fc05196ccee8e726f079fcd40$var$pad(d.getMinutes()),
        $4877b11fc05196ccee8e726f079fcd40$var$pad(d.getSeconds())
    ].join(':');
    return [
        d.getDate(),
        $4877b11fc05196ccee8e726f079fcd40$var$months[d.getMonth()],
        time
    ].join(' ');
}
// log is just a thin wrapper to console.log that prepends a timestamp
$4877b11fc05196ccee8e726f079fcd40$exports.log = function() {
    console.log('%s - %s', $4877b11fc05196ccee8e726f079fcd40$var$timestamp(), $4877b11fc05196ccee8e726f079fcd40$exports.format.apply($4877b11fc05196ccee8e726f079fcd40$exports, arguments));
};
import   "4877b11fc05196ccee8e726f079fcd40:inherits";
/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */ $4877b11fc05196ccee8e726f079fcd40$exports.inherits = $4877b11fc05196ccee8e726f079fcd40$import$70b005d566dd942e;
$4877b11fc05196ccee8e726f079fcd40$exports._extend = function(origin, add) {
    // Don't do anything if add isn't an object
    if (!add || !$4877b11fc05196ccee8e726f079fcd40$var$isObject(add)) return origin;
    var keys = Object.keys(add);
    var i = keys.length;
    while(i--)origin[keys[i]] = add[keys[i]];
    return origin;
};
function $4877b11fc05196ccee8e726f079fcd40$var$hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}
var $4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;
$4877b11fc05196ccee8e726f079fcd40$exports.promisify = function promisify(original) {
    if (typeof original !== 'function') throw new TypeError('The "original" argument must be of type Function');
    if ($4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol && original[$4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol]) {
        var fn = original[$4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol];
        if (typeof fn !== 'function') throw new TypeError('The "util.promisify.custom" argument must be of type Function');
        Object.defineProperty(fn, $4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol, {
            value: fn,
            enumerable: false,
            writable: false,
            configurable: true
        });
        return fn;
    }
    function fn() {
        var promiseResolve, promiseReject;
        var promise = new Promise(function(resolve, reject) {
            promiseResolve = resolve;
            promiseReject = reject;
        });
        var args = [];
        for(var i = 0; i < arguments.length; i++)args.push(arguments[i]);
        args.push(function(err, value) {
            if (err) promiseReject(err);
            else promiseResolve(value);
        });
        try {
            original.apply(this, args);
        } catch (err) {
            promiseReject(err);
        }
        return promise;
    }
    Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
    if ($4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol) Object.defineProperty(fn, $4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol, {
        value: fn,
        enumerable: false,
        writable: false,
        configurable: true
    });
    return Object.defineProperties(fn, $4877b11fc05196ccee8e726f079fcd40$var$getOwnPropertyDescriptors(original));
};
$4877b11fc05196ccee8e726f079fcd40$exports.promisify.custom = $4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol;
function $4877b11fc05196ccee8e726f079fcd40$var$callbackifyOnRejected(reason, cb) {
    // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
    // Because `null` is a special error value in callbacks which means "no error
    // occurred", we error-wrap so the callback consumer can distinguish between
    // "the promise rejected with null" or "the promise fulfilled with undefined".
    if (!reason) {
        var newReason = new Error('Promise was rejected with a falsy value');
        newReason.reason = reason;
        reason = newReason;
    }
    return cb(reason);
}
function $4877b11fc05196ccee8e726f079fcd40$var$callbackify(original) {
    if (typeof original !== 'function') throw new TypeError('The "original" argument must be of type Function');
    // We DO NOT return the promise as it gives the user a false sense that
    // the promise is actually somehow related to the callback's execution
    // and that the callback throwing will reject the promise.
    function callbackified() {
        var args = [];
        for(var i = 0; i < arguments.length; i++)args.push(arguments[i]);
        var maybeCb = args.pop();
        if (typeof maybeCb !== 'function') throw new TypeError('The last argument must be of type Function');
        var self = this;
        var cb = function() {
            return maybeCb.apply(self, arguments);
        };
        // In true node style we process the callback on `nextTick` with all the
        // implications (stack, `uncaughtException`, `async_hooks`)
        original.apply(this, args).then(function(ret) {
            $4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb.nextTick(cb.bind(null, null, ret));
        }, function(rej) {
            $4877b11fc05196ccee8e726f079fcd40$import$9242cb9e284019eb.nextTick($4877b11fc05196ccee8e726f079fcd40$var$callbackifyOnRejected.bind(null, rej, cb));
        });
    }
    Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
    Object.defineProperties(callbackified, $4877b11fc05196ccee8e726f079fcd40$var$getOwnPropertyDescriptors(original));
    return callbackified;
}
$4877b11fc05196ccee8e726f079fcd40$exports.callbackify = $4877b11fc05196ccee8e726f079fcd40$var$callbackify;
